# prefixキーをC-qに変更
set -g prefix C-q

# C-bのキーバインドを解除
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 0

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# tmuxの履歴を保存する
set -g history-file ~/.tmux_history

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# true colorを使用する
set-option -ga terminal-overrides ",xterm-24bits:Tc"
set -g default-terminal "xterm-24bits"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg 'colour17'

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg 'colour206'
#set -g pane-active-border-bg yellow

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=colour155]#{?client_prefix,#[reverse],}Session: #S #[fg=colour155] Window: #I #[fg=colour155] Pane: #P #[default]"
## 右パネルを設定する
set -g status-right "#[fg=colour155][%Y-%m-%d(%a) %H:%M:%S]"
set -g status-right '#[fg=colour155]#{battery_status_bg} Batt: #{battery_percentage} #[default] | %Y-%m-%d(%a) %H:%M:%S '
## 中央ステータスバーを設定する
setw -g window-status-current-fg colour1
setw -g window-status-current-bg colour19
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '

setw -g window-status-fg colour9
setw -g window-status-bg colour17
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
## リフレッシュの間隔を設定する
set -g status-interval 1
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションの設定
setw -g monitor-activity on
set -g visual-activity off

#set history limit
set-option -g history-limit 10000

#マウス操作を有効にする
set-option -g mouse on
setw -g alternate-screen on

# スクロールアップするとコピーモードに入る
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

# 最後までスクロールダウンするとコピーモードを抜ける
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# Ctrl押しっぱなし設定
bind C-[ copy-mode
bind C-] paste-buffer -p
bind C-a last-window
bind -r C-n next-window
bind -r C-p previous-window
bind C-c new-window

# sync-pane
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# screenのようにwindowを切り替える
bind C-q last-window

# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-8)"

if-shell '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
   set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# In version 2.3 "pane-border-status" added
if-shell '[ "$(echo "$TMUX_VERSION >= 2.3" | bc)" = 1 ]' \
  "set -g pane-border-status top; \
   set -g pane-border-format ' #(ps --no-headers -t #{pane_tty} -o args -O-c) ' \
  "

# bind-key syntax changed in 2.4
if-shell '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   send -X select-line; \
   bind-key -t vi-copy C-v rectangle-toggle; \
   bind-key -t vi-copy y   copy-pipe 'DISPLAY=:0 xclip -selection clipboard -in'"

# Newer versions
if-shell '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
   bind-key -T copy-mode-vi y     send -X copy-pipe-and-cancel 'DISPLAY=:0 xclip -selection clipboard -in'; \
   bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'DISPLAY=:0 xclip -selection clipboard -in'; \
   bind-key -T copy-mode-vi ? command-prompt -i -p 'search up' 'send -X search-backward-incremental \"%%%\"'; \
   bind-key -T copy-mode-vi / command-prompt -i -p 'search down' 'send -X search-forward-incremental \"%%%\"';\
   "

# copyした文字列をクリップボードへ
set-option -g set-clipboard on

# tpmプラグインのリスト
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'

# tpm実行(.tmux.confの末尾になっている必要あり)
run '~/.tmux/plugins/tpm/tpm'

