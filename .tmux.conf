# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | perl -pe 's/.*(\\d+\\.\\d+).*/\\1/g')"

# prefixキーをC-qに変更
set -g prefix C-q

# C-bのキーバインドを解除
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 20

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# tmuxの履歴を保存する
set -g history-file ~/.tmux_history

# tmuxのコマンドモードはemacs方式にする
setw -g status-keys emacs

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 連続的にwindowを入れ替える
bind-key -r < {swap-window -t -; select-window -t -}
bind-key -r > {swap-window -t +; select-window -t +}


# true colorを使用する
set -g default-terminal "tmux-256color"

if-shell '[ "$(echo "$TMUX_VERSION >= 3.2" | bc)" = 1 ]' \
    "set-option -g terminal-features 'xterm-256color:RGB' "
if-shell '[ "$(echo "$TMUX_VERSION <  3.2" | bc)" = 1 ]' \
    "set-option -g terminal-overrides ',xterm-256color:Tc'"

# 基本色の設定
set -g @mytheme-color-main1 "#0f4c75"
set -g @mytheme-color-main2 "#3282b8"
set -g @mytheme-color-main3 "#bbe1fa"
set -g @mytheme-color-string-dark "#000000"
set -g @mytheme-color-string-bright "#ffffff"

# ステータスバーの色を設定する
set -gF status-fg "#{@mytheme-color-string-bright}"
set -gF status-bg "#{@mytheme-color-main1}"

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 15
set -g status-left '#{?client_prefix,#[bg=#{@mytheme-color-main2}] PREFIX #[bg=#{@mytheme-color-main1}]#[fg=#{@mytheme-color-main2}],#[bg=#{@mytheme-color-main3}]#[fg=#{@mytheme-color-string-dark}] NORMAL #[fg=#{@mytheme-color-main3}]#[bg=#{@mytheme-color-main1}]}    '
## 右パネルを設定する
set -gF status-right-length 150
set -g status-right '#{pane_current_path}#[fg=#{@mytheme-color-main2}]  #[fg=#{@mytheme-color-string-bright}]#[bg=#{@mytheme-color-main2}] Batt: #{battery_percentage} #[fg=#{@mytheme-color-main3}]#[fg=#{@mytheme-color-string-dark}]#[bg=#{@mytheme-color-main3}]  %Y-%m-%d(%a) %H:%M:%S '
## 中央ステータスバーを設定する
setw -gF window-status-current-style fg="#{@mytheme-color-string-dark}",bg="#{@mytheme-color-main3}"
setw -g window-status-current-format ' #[fg="#{@mytheme-color-string-dark}"]#I:#W#F#[reverse]'

setw -gF window-status-style fg="#{@mytheme-color-string-bright}",bg="#{@mytheme-color-main1}"
setw -g window-status-format ' #I#[fg="#{@mytheme-color-string-dark}"]:#[fg="#{@mytheme-color-string-dark}"]#W#[fg="#{@mytheme-color-string-dark}"]#F '
setw -g window-status-separator '|'

# ペインボーダーの色を設定する
set -gF pane-border-style fg="#{@mytheme-color-main1}",bg="#{@mytheme-color-string-dark}"
# アクティブなペインを目立たせる
set -gF pane-active-border-style fg="#{@mytheme-color-main3}",bg="#{@mytheme-color-string-dark}"

# コマンドラインの色を設定する
set -gF message-style fg="#{@mytheme-color-string-bright}",bg="#{@mytheme-color-main1}"

## リフレッシュの間隔を設定する
set -g status-interval 1
## ウィンドウリストの位置を中心寄せにする
set -g status-justify left
## ヴィジュアルノーティフィケーションの設定
setw -g monitor-activity on
set -g visual-activity off

#set history limit
set-option -g history-limit 10000

# スクロールアップするとコピーモードに入る
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"

# 最後までスクロールダウンするとコピーモードを抜ける
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# Ctrl押しっぱなし設定
bind C-[ copy-mode
bind C-] paste-buffer -p
bind C-a last-window
bind -r C-n next-window
bind -r C-p previous-window
bind C-c new-window

# sync-pane
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# screenのようにwindowを切り替える
bind C-q last-window

if-shell '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
   set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# In version 2.3 "pane-border-status" added
if-shell '[ "$(echo "$TMUX_VERSION >= 2.3" | bc)" = 1 ]' \
  "set -g pane-border-status top; \
   set -g pane-border-format ' #(~/dotfiles/tmux-pane-border.sh #{pane_current_path}) ' \
  "

# bind-key syntax changed in 2.4
if-shell '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   send -X select-line; \
   bind-key -t vi-copy C-v rectangle-toggle; \
   bind-key -t vi-copy y   copy-pipe 'DISPLAY=:0 xclip -selection clipboard -in'"

# Newer versions
if-shell '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi y     send -X copy-pipe-and-cancel 'DISPLAY=:0 xclip -selection clipboard -in'; \
   bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'DISPLAY=:0 xclip -selection clipboard -in'; \
   bind-key -T copy-mode-vi ? command-prompt -i -p 'search up' 'send -X search-backward-incremental \"%%%\"'; \
   bind-key -T copy-mode-vi / command-prompt -i -p 'search down' 'send -X search-forward-incremental \"%%%\"';\
 "

# copyした文字列をクリップボードへ(OSC 52対応端末のみ)
set-option -g set-clipboard on

# tpmプラグインのリスト
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'

# tpm実行(.tmux.confの末尾になっている必要あり)
run -b '~/.tmux/plugins/tpm/tpm'

